import { BaseEntity } from 'src/core/base.entity';
import { Account } from 'src/modules/payments/entities/account.entity';
import {
  Column,
  Entity,
  JoinColumn,
  OneToOne,
  PrimaryGeneratedColumn,
  UpdateDateColumn,
} from 'typeorm';

@Entity()
export class Revenue extends BaseEntity {
  @PrimaryGeneratedColumn('identity')
  id!: number & { __brand: 'revenueId' };

  @Column({ type: 'int', default: null })
  account_id!: number & { __brand: 'accountId' };

  @Column({ type: 'bigint', default: 0 })
  total_revenue!: number;

  @Column({ type: 'bigint', nullable: false, default: 0 })
  total_sales!: number; // Total sales generated by the seller

  @Column({ type: 'bigint', nullable: false, default: 0 })
  profit!: number;

  @Column({ type: 'boolean', nullable: false, default: false })
  active!: boolean;

  @UpdateDateColumn({ type: 'varchar', nullable: false })
  updated_at!: Date;

  @OneToOne(() => Account, (account) => account.revenue, {
    onDelete: 'CASCADE',
  })
  @JoinColumn({ name: 'account_id' })
  account!: Account;
}
